keywords() ::= <<Machine>>

machine(type_info, invariant, abstract_variables, operations, initialisation, machine) ::= <<
\<Machine name='<machine>' type='abstraction'>
    <abstract_variables>
    <invariant>
    <initialisation>
    <operations>
    <type_info>
\</Machine>
>>

initialisation(body) ::= <<
\<Initialisation>
    <body>
\</Initialisation>
>>

assignment_sub(body1, body2) ::= <<
\<Assignement_Sub>
    \<Variables>
        <body1>
    \</Variables>
    \<Values>
        <body2>
    \</Values>
\</Assignement_Sub>
>>

abstract_variable(ids, attrs) ::= <<
\<Abstract_Variables>
    <ids; separator="\n">
\</Abstract_Variables>
>>

id(val, typref) ::= <<
\<Id value='<val>' typref='<typref>'/>
>>

invariant(body) ::= <<
\<Invariant>
    <body>
\</Invariant>
>>

nary_pred(op, statements) ::= <<
\<Nary_Pred op='<op>'>
    <statements; separator="\n">
\</Nary_Pred>
>>

exp_comparision(op, statements)
::= <<
\<Exp_Comparison op='<op>'>
    <statements; separator="\n">
\</Exp_Comparison>
>>

binary_exp(op, typref, body)
::= <<
\<Binary_Exp op='<op>' typref='<typref>'>
    <body; separator="\n">
\</Binary_Exp>
>>

integer_literal(val, typref) ::=<<
\<Integer_Literal value='<val>' typref='<typref>'/>
>>

type_info(types) ::= <<
\<TypeInfos>
    <types; separator="\n">
\</TypeInfos>
>>

type(id) ::= <<
\<Type id='<id>'>

\</Type>
>>

